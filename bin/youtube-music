#! /bin/bash
#    youtube-music: a simple script for downloading music using youtube-dl to mp3
#
#    Copyright (C) 2021 mini_bomba
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <https://www.gnu.org/licenses/>.

# Check dependencies
FAIL=0
if ! which youtube-dl > /dev/null 2>&1
then
    echo "Missing required dependency: youtube-dl" >&2
    FAIL=1
fi
if ! which ffmpeg > /dev/null 2>&1
then
    echo "Missing required dependency: ffmpeg" >&2
    FAIL=1
fi
if ! which grep > /dev/null 2>&1
then
    echo "Missing required dependency: grep" >&2
    FAIL=1
fi
if ! which jq > /dev/null 2>&1
then
    echo "Missing required dependency: jq" >&2
    FAIL=1
fi
if ! which xargs > /dev/null 2>&1
then
    echo "Missing required dependency: xargs" >&2
    FAIL=1
fi

if [ $FAIL -ne 0 ]
then
    exit 1
fi
# Set default settings if not overriden
if [ -z "$MBYTM_DOWNLOAD_PROCS" ]
then
    MBYTM_DOWNLOAD_PROCS=10
fi
if [ -z "$MBYTM_FFMPEG_PROCS" ]
then
    MBYTM_FFMPEG_PROCS=4
fi

VID="$@"
# Ask user for url, if not given in args
if [ -z "$VID" ]
then
    echo -n "No music video url/id given, please enter one now: "
    read VID
    if [ -z "$VID" ]
    then
        echo "No music video url/id given, exiting."
        exit 1
    fi
fi

# Create a temp directory (for easy playlist support)
TMP_DIR=$(mktemp -d)
trap "rm -rf $TMP_DIR" EXIT
# Download videos to temp directory
echo "Downloading videos..."
if echo "$VID" | grep -P "youtube\.com/.*list" > /dev/null
then
    youtube-dl --flat-playlist -j "$VID" | jq -r '"https://youtu.be/"+ .url' | xargs -P $MBYTM_DOWNLOAD_PROCS -n 1 -d "\n" -r sh -c "echo \"Downloading \$0...\"; youtube-dl -q -o \"$TMP_DIR/%(id)s\" -f \"bestaudio/best[height<=144]/best\" \$0; echo \"\$0 downloaded\""
else
    youtube-dl -o "$TMP_DIR/%(id)s" -f "bestaudio/best[height<=144]/best" "$VID"
fi

# Extract music to current directory
echo "Extracting music..."
ls "$TMP_DIR" | xargs -P $MBYTM_FFMPEG_PROCS -n 1 -r sh -c "echo \"Processing \$0...\"; ffmpeg -i \"$TMP_DIR/\$0\" -v warning -y \"./\$0.mp3\"; echo \"\$0 processed\""

# Cleanup temp files
echo "Deleting temp files..."
trap - EXIT
rm -rf "$TMP_DIR"
echo "Done!"


