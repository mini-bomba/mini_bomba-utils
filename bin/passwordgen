#!/usr/bin/env python3
#    passwordgen: Simple CLI password generator
#
#    Copyright (C) 2021-2022 mini_bomba
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <https://www.gnu.org/licenses/>.

import base64
import secrets
import string
import sys
import os
import shutil
import subprocess

mode_env = os.environ['MBPASS_MODE'].lower() if 'MBPASS_MODE' in os.environ else None
if mode_env is None or mode_env in ('print', 'terminal', ''):
    clipboard = False
    printpass = True
elif mode_env == 'both':
    clipboard = True
    printpass = True
elif mode_env in ('copy', 'clipboard'):
    clipboard = True
    printpass = False 
else:
    print('Invalid "MBPASS_MODE" environment variable value.', file=sys.stderr)
    print('See https://github.com/mini-bomba/mini_bomba-utils/blob/main/passwordgen.md#using-environment-variables-to-alter-programs-behaviour for details.', file=sys.stderr)
    exit(1)

clipboard_env = os.environ['MBPASS_CLIPBOARD'].lower() if 'MBPASS_CLIPBOARD' in os.environ else None
if not clipboard:
    pass
elif clipboard_env is None:
    if os.environ.get('XDG_SESSION_DESKTOP') == 'KDE':
        clipboard_driver='kde'
    elif shutil.which('termux-clipboard-set') is not None:
        clipboard_driver='termux'
    else:
        clipboard_driver='tk'
elif clipboard_env in ('tkinter', 'tk'):
    clipboard_driver='tk'
elif clipboard_env in ('klipper', 'kde'):
    clipboard_driver='kde'
elif clipboard_env == 'termux':
    clipboard_driver='termux'
else:
    print('Invalid "MBPASS_CLIPBOARD" environment variable value.', file=sys.stderr)
    print('See https://github.com/mini-bomba/mini_bomba-utils/blob/main/passwordgen.md#using-environment-variables-to-alter-programs-behaviour for details.', file=sys.stderr)
    exit(1)

length = int(sys.argv[1]) if len(sys.argv) > 1 else 64
type_env = os.environ['MBPASS_TYPE'].lower() if 'MBPASS_TYPE' in os.environ else None
if type_env is None or type_env == 'urlsafe':
    passw = secrets.token_urlsafe(length)[:length]
elif type_env == 'alphanum':
    chars = string.ascii_letters + string.digits
    passw = "".join(secrets.choice(chars) for _ in range(length))
elif type_env == 'ascii':
    chars = string.ascii_letters + string.digits + string.punctuation
    passw = "".join(secrets.choice(chars) for _ in range(length))
elif type_env in ('base64', 'b64'):
    passw = base64.b64encode(secrets.token_bytes(length)).decode()[:length]
else:
    print('Invalid "MBPASS_TYPE" environment variable value.', file=sys.stderr)
    print('See https://github.com/mini-bomba/mini_bomba-utils/blob/main/passwordgen.md#using-environment-variables-to-alter-programs-behaviour for details.', file=sys.stderr)
    exit(1)

if printpass:
    print(passw)
if clipboard:
    if clipboard_driver == 'tk':
        # Clipboard code based on https://stackoverflow.com/a/4203897
        import tkinter
        tk = tkinter.Tk()
        tk.withdraw()
        tk.clipboard_clear()
        tk.clipboard_append(passw)
        tk.update()
        tk.destroy()
    elif clipboard_driver == 'kde':
        # Code based on https://gist.github.com/aeris/3308963
        import dbus
        bus = dbus.SessionBus()
        klipper = dbus.Interface(bus.get_object('org.kde.klipper', '/klipper'), 
                                 dbus_interface='org.kde.klipper.klipper')
        klipper.setClipboardContents(passw)
    elif clipboard_driver == 'termux':
        subprocess.run(['termux-clipboard-set'], input=passw, text=True)
    else:
        assert False, 'Invalid clipboard_driver value'

